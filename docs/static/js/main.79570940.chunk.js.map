{"version":3,"sources":["components/base_general.js","components/AddCate/AddCategory.jsx","components/ShowCate/GiftGrid.jsx","components/helpers/getGifsAxios.js","components/ShowCate/ShowCategory.jsx","components/hooks/useFetchGifs.js","components/GiftExpertApp.jsx","components/principal.jsx","reportWebVitals.js","index.js"],"names":["showMsg","value","console","log","AddCategory","response","useState","inputSearch","setInputSearch","handleSubmitCat","e","preventDefault","md","className","id","onSubmit","icon","onClick","onChange","target","type","placeholder","aria-label","GiftGridItem","title","url","size","hover","zoom","src","alt","pattern","getGifts","category","a","random","min","max","Math","floor","getRandomInt","url_peticion","encodeURI","axios","resp","data","gifts","map","v","images","downsized_medium","ShowCategory","loading","state","setstate","useEffect","then","img","useFetchGifs","loading_image","role","GiftGrid","GiftExpertApp","categorias","setCategorias","trim","localeCompare","k","Principal","style","position","bottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79570940.chunk.js","sourcesContent":["//// variables de configuracion globales pero solo para codigo ///////\r\nconst debug=true;\r\n\r\nexport const showMsg = (value) =>{ if(debug) console.log(value);}\r\n\r\nexport const api_key_gift = '0bGUX1HjVSodSdkptYXlytx9JVSvp4KV';\r\n\r\nexport default showMsg;\r\n","import React,{useState} from 'react';\r\nimport {MDBCol,MDBFormInline,MDBIcon} from 'mdbreact';\r\nimport PropTypes from 'prop-types';\r\nimport './category.css';\r\n\r\nconst AddCategory = ({response}) =>{\r\n\r\n    const [inputSearch,setInputSearch] = useState('');\r\n\r\n    const handleSubmitCat = (e) =>{\r\n        e.preventDefault();\r\n        response(inputSearch,setInputSearch); // se envia el valor del input y el set para limpiarlo una vez ingresado \r\n    }\r\n\r\n    return(\r\n        <MDBCol md=\"8\" className=\"mx-auto\">\r\n                <MDBFormInline id=\"formulario_search\" className=\"md-form\" onSubmit={handleSubmitCat}>\r\n                    <MDBIcon icon=\"search\" className=\"search_icon\" onClick={handleSubmitCat}/>\r\n                    <input className=\"form-control form-control-sm ml-3 pl-2 w-75\" id=\"input_search\" \r\n                        onChange={(e) => setInputSearch(e.target.value)} \r\n                        value={inputSearch}\r\n                        type=\"text\" placeholder=\"Buscar\" aria-label=\"Search\" />\r\n                </MDBFormInline>\r\n        </MDBCol>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    response: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;","import React from 'react'\r\nimport {MDBCol,MDBView,MDBMask} from 'mdbreact';\r\n\r\nconst GiftGridItem = ( {title,url} ) => {\r\n    \r\n    return (\r\n            <MDBCol size=\"6\" md=\"4\">\r\n                <MDBView hover zoom>\r\n                <img\r\n                    src={url}\r\n                    className=\"img-fluid\"\r\n                    alt={title}\r\n                />\r\n                <MDBMask pattern={5} className=\"flex-center\">\r\n                    <p className=\"white-text\"></p>\r\n                </MDBMask>\r\n                </MDBView>\r\n            </MDBCol>\r\n)\r\n}\r\n\r\nexport default GiftGridItem;\r\n","import axios from 'axios';\r\nimport {showMsg,api_key_gift} from '../base_general';\r\n\r\n    export const getGifts = async(category) => {\r\n        showMsg(\"realizando peticion\");\r\n\r\n        const getRandomInt =(min, max) => (Math.floor(Math.random() * (max - min)) + min);\r\n        let random=getRandomInt(0,200);\r\n        showMsg(\"random empieza en \"+random);\r\n        const url_peticion = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=12&api_key=${api_key_gift}&offset=${random}`;\r\n\r\n        try {\r\n            const  resp = await axios(url_peticion);\r\n            const {data} = await resp.data;\r\n    \r\n            //showMsg(data);\r\n            const gifts = data.map((v)=>{\r\n                return {\r\n                    id:v.id,\r\n                    title: v.title,\r\n                    url: v.images?.downsized_medium.url\r\n                }\r\n            });\r\n\r\n            showMsg(gifts);\r\n            //setImages(gifts); //migradas a ser consumidas en respuesta then\r\n           // setLoading_image(false);    \r\n            return gifts;\r\n        } catch (error) {\r\n            showMsg(\"fallo getGift \"+error)\r\n            return null;\r\n        }\r\n    }","import React from 'react';\r\nimport {MDBContainer,MDBRow,MDBAnimation} from 'mdbreact';\r\nimport PropTypes from 'prop-types';\r\nimport GiftGrid from './GiftGrid';\r\n\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\n\r\nconst ShowCategory = ({category}) =>{\r\n\r\n    const {data:images,loading:loading_image} = useFetchGifs(category);\r\n\r\n    const construct_images = () => (<MDBAnimation type=\"zoomIn\"><MDBContainer className=\"mt-2 mb-5\"><MDBRow className=\"mt-4\">{images.map( (v) => <GiftGrid key={v.id} {...v} /> )}</MDBRow></MDBContainer><hr/></MDBAnimation>);\r\n\r\n    return (<>\r\n        <h3 className=\"text-center\">{category}</h3>\r\n        {!loading_image?\r\n            construct_images()\r\n        :\r\n        <div className=\"w-100  text-center\">\r\n            <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n        } \r\n    </>)\r\n}\r\n\r\nShowCategory.propTypes ={\r\n    category : PropTypes.string.isRequired\r\n}\r\n\r\nexport default ShowCategory;\r\n\r\n\r\n","import {useEffect, useState} from 'react';\r\nimport { getGifts } from '../helpers/getGifsAxios';\r\nimport {showMsg} from '../base_general';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    /// component did mount o update on category value\r\n    useEffect(()=>{ \r\n        showMsg(\"Componente  useFetchGifs montado\");\r\n        getGifts(category).then(img=>{\r\n            if(img!==null){\r\n                showMsg(\"data cargada\");\r\n                setstate({\r\n                    data: img,\r\n                    loading:false\r\n                });\r\n            }\r\n        })\r\n    },[category]);\r\n\r\n\r\n        // componente will unmount\r\n    useEffect( () => () =>{\r\n            showMsg(\"Componente  useFetchGifs desmontado\");\r\n            setstate({\r\n                data: [],\r\n                loading:true\r\n            });\r\n        }, [category] );\r\n\r\n    return state; // {data:[], loading:true}\r\n}\r\n\r\n\r\n /////// use Effects posibles ////\r\n// useEffect( () => console.log(\"mount\"), [] );\r\n// useEffect( () => console.log(\"will update data1\"), [ data1 ] );\r\n// useEffect( () => console.log(\"will update any\") );\r\n// useEffect( () => () => console.log(\"will update data1 or unmount\"), [ data1 ] );\r\n// useEffect( () => () => console.log(\"unmount\"), [] );\r\n\r\n\r\n// el siguiente comentario es necesario para funciones que son llamadas en el hook de componentdidMount pero que son usadas afuera tambien, en caso contrario \r\n// deberian ser creadas dichas funciones dentro del clousere de useEffect (A)\r\n// (A) -----eslint-disable-next-line react-hooks/exhaustive-deps-----","import React,{useState,useEffect} from 'react';\r\nimport {showMsg} from './base_general';\r\nimport AddCategory from './AddCate/AddCategory';\r\nimport ShowCategory from './ShowCate/ShowCategory';\r\n\r\nconst GiftExpertApp = () =>{\r\n    \r\n    //showMsg(\"iniciado con apikey \"+api_key_gift);\r\n\r\n    const [categorias,setCategorias] = useState(['Batman']);\r\n\r\n    const get_categorias = () => categorias.map((v,k)=><ShowCategory key={v} category={v}/>); // por alguna razon no renderiza correctamente si el key no es distinto al index sino el contenido o un titulo\r\n    \r\n\r\n    useEffect( () => () =>{\r\n        showMsg(\"Componente GiftExpertApp desmontado\");\r\n        setCategorias([]);\r\n    }, [] );\r\n\r\n\r\n    //// callback llamado para agregar, esto sucede desde el AddCategory que retorna un string con el valor a agregar\r\n\r\n    const handleAdd = (inputSearch,setInputSearch) =>{\r\n        if(inputSearch.trim().localeCompare('')!==0){\r\n\r\n            showMsg(\"Agregando \");\r\n            setCategorias([inputSearch,...categorias]);\r\n            setInputSearch('');\r\n            showMsg(\"Agregado correctamente\");\r\n\r\n        }else{\r\n            setInputSearch('');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return ( <>\r\n            <h2 className=\"text-center w-100\">Gift expert APP</h2>\r\n            <hr/>\r\n            <AddCategory response={handleAdd} />\r\n            <hr/>\r\n            <div className=\"w-100 mx-auto mb-5\">\r\n                {get_categorias()}\r\n            </div>\r\n            </>);\r\n}\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\r\nimport {showMsg} from './base_general';\r\nimport GiftExpertApp from './GiftExpertApp';\r\n\r\nconst Principal = () =>{\r\n\r\n    showMsg(\"iniciado principal\");\r\n\r\n    const stylo_footer = {\r\n        position: \"fixed\",\r\n        bottom: \"0\",\r\n        'backgroundColor':\"grey\",\r\n        'marginBottom':\"0\"\r\n      };\r\n\r\n      const stylo_header = {\r\n        'backgroundColor':\"grey\",\r\n      }\r\n\r\n      \r\n    return (<>\r\n             <div className=\"text-center w-100 h5 mb-4\" style={stylo_header}>Header</div>\r\n                <GiftExpertApp className=\"mb-5\"/>\r\n             <div className=\"text-center w-100 h5 mt-4\" style={stylo_footer}>Footer</div>   \r\n        </>);\r\n}\r\n\r\nexport default Principal;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport APPBase from './components/principal';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <APPBase />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}